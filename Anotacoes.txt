-------------------------------------------------
Anotações:

* Operações CRUD (Create, Read, Update e Delete)

* Http Requests:
    
    * GET    - Pegar Dados.
    * POST   - Enviar Dados.
    * PUT    - Update em Dados.
    * DELETE - Deletar Dados.

-------------------------------------------------
Comandos para versionamento do node:

* node --version

* nvm install latest

* nvm current

* nvm use [version]
-------------------------------------------------
Comandos para uso do ´eslint´

* npx eslint --init

* import * as Logger from "./logger.js";

* import * as Path from "path";

* export * from "./logger.js";

* // eslint-disable-next-line no-undef 

* /* eslint-disable no-unused-vars */
-------------------------------------------------
Comandos para uso no ´npm´

* npm-check_updates

* ncu -u

* npm outdated (or) npm -g outdated (para dependencias globais) 

* npm list
-------------------------------------------------
Comando para publicar dependencias no ´npm´

* npm init --yes (em um projeto limpo, para criar o "package.json")

* npm login (logar na conta npm)

* npm publish

* Caso publicado, instale a dependencia em outro projeto (npm install "x") e faça o import aonde desejar utilizar (import * as X from "x";)

* npm version major (ou "minor", ou "patch" dependendo das alterações) (para alterar a versão, e logo após dar um "npm publish")
-------------------------------------------------
Setar o ambiente de debugação para Produção ou Desevolvimento

* $env:NODE_ENV="development" (ou "production")

* $env:app_password=1234  (Setando uma variável de ambiente)

* $env:DEBUG = "app:startup" (usando dependencia "DEBUG")

* $env:DEBUG = 'app:startup','app:db'(para mais de um módulo de debugação) ou $env:DEBUG = 'app:*' (para todos)

-- Linux --

* Ao invés de "$env:", use "export"

-------------------------------------------------
Usos do Express

* aplicacao.use(express.static('../public')); (usado para que os arquivos na pasta "./public" possam ser acessados (Ex:http://127.0.0.1:3000/readme.txt))

* aplicacao.set('view engine', 'pug');
  aplicacao.set('views', './views'); (Usando estas 2 linhas, toda função 'res.sender:' irá passar nos parâmetros o nome do arquivo na pasta 'view').

* res.render('index', {title: "Meu App", message: "Olá"}); (Exemplo do tópico acima)
-------------------------------------------------
Configurar e utilizar o mongodb como banco de dados

* copiar o caminho do diretório (Ex: C:\Program Files\MongoDB\Server\7.0\bin) para as vaiáveis de ambiente PATH

* mongod (Informar no prompt de comando para iniciar o banco de dados do mongodb)

-- Linux --

* sudo service mongod start

* mongosh

-------------------------------------------------